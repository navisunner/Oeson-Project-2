# -*- coding: utf-8 -*-
"""Project 2 code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pdT14O0rhbOt5_K9XwjJDeW_zgGO2i6N
"""

import pandas as pd
from google.colab import files
uploaded = files.upload()

import seaborn as sns
import matplotlib.pyplot as plt
import io
df = pd.read_csv(io.BytesIO(uploaded['jobs_in_data.csv']))

print(df.head())
print(df.info())

#First to produce basic descriptive stats
df.describe()

# Display additional statistics like count, unique, top, and freq
df.describe(include='all')

from matplotlib import pyplot as plt
_df_0['work_year'].plot(kind='hist', bins=20, title='work_year')
plt.gca().spines[['top', 'right',]].set_visible(False)

sns.set(style="whitegrid")
plt.figure(figsize=(10, 6))


sns.countplot(x='work_year', data=df)

plt.title('Frequency of Each Year')
plt.xlabel('Year')
plt.ylabel('Frequency')
plt.show()

plt.figure(figsize=(10, 6))

plt.bar(df['work_year'], df['salary_in_usd'])

plt.title('Average Salaries for Each Year')
plt.xlabel('Year')
plt.ylabel('Average Salary')
plt.show()

sns.set(style="whitegrid")
plt.figure(figsize=(10, 6))

sns.barplot(x='work_year', y='salary_in_usd', data=df)

plt.title('Average Salaries for Each Year')
plt.xlabel('Year')
plt.ylabel('Average Salary')
plt.show()

job_title_counts = df['job_title'].value_counts().reset_index()

# Renaming columns for clarity
job_title_counts.columns = ['Job Title', 'Frequency']

# Sort the data by frequency
job_title_counts = job_title_counts.sort_values(by='Frequency', ascending=True)

# Plotting 
sns.set(style="whitegrid")
plt.figure(figsize=(30, 24))  # Adjust the size as needed

# Using a horizontal bar plot
ax = sns.barplot(x='Frequency', y='Job Title', data=job_title_counts, palette='viridis')
ax.set_title('Frequency of Job Titles')
ax.set_xlabel('Frequency')
ax.set_ylabel('Job Title')

plt.show()

job_title_counts = df['job_title'].value_counts().reset_index()


job_title_counts.columns = ['Job Title', 'Frequency']

# Select the top 10 job titles by frequency
top_10_job_titles = job_title_counts.head(10)

# Sort the data by frequency
top_10_job_titles = top_10_job_titles.sort_values(by='Frequency', ascending=True)

# Plotting
sns.set(style="whitegrid")
plt.figure(figsize=(10, 8))  # Adjust the size as needed

# Using a horizontal bar plot
ax = sns.barplot(x='Frequency', y='Job Title', data=top_10_job_titles, palette='viridis')
ax.set_title('Top 10 Job Titles by Frequency')
ax.set_xlabel('Frequency')
ax.set_ylabel('Job Title')

plt.show()

# Calculate average salaries by job titles
average_salary_by_title = df.groupby('job_title')['salary_in_usd'].mean().reset_index()

# Sort the data by average salary
average_salary_by_title = average_salary_by_title.sort_values(by='salary_in_usd', ascending=True)

# Plotting
sns.set(style="whitegrid")
plt.figure(figsize=(36, 24))

# Using a horizontal bar plot
ax = sns.barplot(x='salary_in_usd', y='job_title', data=average_salary_by_title, palette='viridis')
ax.set_title('Average Salaries by Job Titles')
ax.set_xlabel('Average Salary')
ax.set_ylabel('Job Title')

plt.show()

average_salary_by_title = df.groupby('job_title')['salary_in_usd'].mean().reset_index()

# Sort the data by average salary
average_salary_by_title = average_salary_by_title.sort_values(by='salary_in_usd', ascending=True)


top_n = 5  
top_job_titles = average_salary_by_title.tail(top_n)
bottom_job_titles = average_salary_by_title.head(top_n)

# Combine the top and bottom job titles for display
selected_job_titles = pd.concat([top_job_titles, bottom_job_titles])

# Plotting
sns.set(style="whitegrid")
plt.figure(figsize=(12, 8))

# Using a horizontal bar plot
ax = sns.barplot(x='salary_in_usd', y='job_title', data=selected_job_titles, palette='viridis')
ax.set_title(f'Top and Bottom {top_n} Job Titles by Average Salary')
ax.set_xlabel('Average Salary')
ax.set_ylabel('Job Title')

plt.show()

most_common_job_titles = df['job_title'].value_counts().head(5).index

# Calculate average salaries for the most common job titles
average_salary_common_titles = df[df['job_title'].isin(most_common_job_titles)].groupby('job_title')['salary_in_usd'].mean().reset_index()

# Plotting
sns.set(style="whitegrid")
plt.figure(figsize=(12, 8))

# Using a horizontal bar plot
ax = sns.barplot(x='salary_in_usd', y='job_title', data=average_salary_common_titles, palette='viridis')
ax.set_title('Average Salaries for the Most Common Job Titles')
ax.set_xlabel('Average Salary')
ax.set_ylabel('Job Title')

plt.show()

job_category_distribution = df['job_category'].value_counts()

# Define a custom color palette
custom_colors = sns.color_palette("Set3", n_colors=len(job_category_distribution))

# Plotting with a pie chart
plt.figure(figsize=(20, 20))
plt.pie(job_category_distribution, labels=job_category_distribution.index, autopct='%1.1f%%', colors=custom_colors)
plt.title('Distribution of Job Categories')
plt.show()

average_salary_by_category = df.groupby('job_category')['salary_in_usd'].mean().reset_index()

# Plotting 
sns.set(style="whitegrid")
plt.figure(figsize=(12, 8))

# Using a bar plot
ax = sns.barplot(x='salary_in_usd', y='job_category', data=average_salary_by_category, palette='viridis')
ax.set_title('Average Salaries by Job Category')
ax.set_xlabel('Average Salary')
ax.set_ylabel('Job Category')

plt.show()

average_salary_by_currency = df.groupby('salary_currency')['salary_in_usd'].mean().reset_index()

# Plotting 
sns.set(style="whitegrid")
plt.figure(figsize=(10, 6))

# Using a bar plot
ax = sns.barplot(x='salary_currency', y='salary_in_usd', data=average_salary_by_currency)
ax.set_title('Average Salary in USD by Currency')
ax.set_xlabel('Currency')
ax.set_ylabel('Average Salary (USD)')

plt.show()

# Calculate average salary for each location
average_salary_by_residence = df.groupby('employee_residence')['salary_in_usd'].mean().reset_index()
average_salary_by_company_location = df.groupby('company_location')['salary_in_usd'].mean().reset_index()

# Plotting 
sns.set(style="whitegrid")

# Using grouped bar plots
plt.figure(figsize=(30, 15))

plt.subplot(1, 2, 1)
ax1 = sns.barplot(x='employee_residence', y='salary_in_usd', data=average_salary_by_residence, palette='viridis')
ax1.set_title('Average Salary by Employee Residence')
ax1.set_xlabel('Employee Residence')
ax1.set_ylabel('Average Salary')

plt.subplot(1, 2, 2)
ax2 = sns.barplot(x='company_location', y='salary_in_usd', data=average_salary_by_company_location, palette='viridis')
ax2.set_title('Average Salary by Company Location')
ax2.set_xlabel('Company Location')
ax2.set_ylabel('Average Salary')
ax1.set_xticklabels(ax1.get_xticklabels(), rotation=45, ha="right")
ax2.set_xticklabels(ax2.get_xticklabels(), rotation=45, ha="right")

plt.tight_layout()
plt.show()

plt.figure(figsize=(10, 6))

# Using a box plot
ax = sns.boxplot(x='experience_level', y='salary_in_usd', data=df, palette='viridis')
ax.set_title('Salary Distribution Based on Experience Level')
ax.set_xlabel('Experience Level')
ax.set_ylabel('Salary')

plt.show()

plt.figure(figsize=(18, 6))

# Employment Type
plt.subplot(1, 3, 1)
ax1 = sns.boxplot(x='employment_type', y='salary_in_usd', data=df, palette='viridis')
ax1.set_title('Salary Distribution by Employment Type')
ax1.set_xlabel('Employment Type')
ax1.set_ylabel('Salary')

# Work Setting
plt.subplot(1, 3, 2)
ax2 = sns.boxplot(x='work_setting', y='salary_in_usd', data=df, palette='viridis')
ax2.set_title('Salary Distribution by Work Setting')
ax2.set_xlabel('Work Setting')
ax2.set_ylabel('Salary')

# Company Size
plt.subplot(1, 3, 3)
ax3 = sns.boxplot(x='company_size', y='salary_in_usd', data=df, palette='viridis')
ax3.set_title('Salary Distribution by Company Size')
ax3.set_xlabel('Company Size')
ax3.set_ylabel('Salary')

plt.tight_layout()
plt.show()
